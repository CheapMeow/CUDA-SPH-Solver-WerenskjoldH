cmake_minimum_required(VERSION 3.24)
project(CUDA_SPH_SOLVER CXX CUDA)

# Stop in source builds
set(CMAKE_DISABLE_IN_SOURCE_BUILD ON)

set(SRC_ROOT_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)
set(3RD_PARTY_ROOT_DIR ${CMAKE_CURRENT_SOURCE_DIR}/3rdparty)
set(LIB_ROOT_DIR ${CMAKE_CURRENT_SOURCE_DIR}/lib)

# sdl2

add_subdirectory(${3RD_PARTY_ROOT_DIR}/SDL2)

# cuda lib

file(GLOB_RECURSE CUDA_SPH_SOLVER_LIB_HEADER_FILES CONFIGURE_DEPENDS ${SRC_ROOT_DIR}/*.cuh)
file(GLOB_RECURSE CUDA_SPH_SOLVER_LIB_SOURCE_FILES CONFIGURE_DEPENDS ${SRC_ROOT_DIR}/*.cu)

add_library(CUDA_SPH_SOLVER_LIB ${CUDA_SPH_SOLVER_LIB_HEADER_FILES} ${CUDA_SPH_SOLVER_LIB_SOURCE_FILES})

set_target_properties(CUDA_SPH_SOLVER_LIB PROPERTIES CXX_STANDARD 11)

# cpp exe

file(GLOB_RECURSE CUDA_SPH_SOLVER_EXE_HEADER_FILES CONFIGURE_DEPENDS ${SRC_ROOT_DIR}/*.h)
file(GLOB_RECURSE CUDA_SPH_SOLVER_EXE_SOURCE_FILES CONFIGURE_DEPENDS ${SRC_ROOT_DIR}/*.cpp )

add_executable(CUDA_SPH_SOLVER_EXE ${CUDA_SPH_SOLVER_EXE_HEADER_FILES} ${CUDA_SPH_SOLVER_EXE_SOURCE_FILES})

set_target_properties(CUDA_SPH_SOLVER_EXE PROPERTIES CXX_STANDARD 11)

target_link_libraries(CUDA_SPH_SOLVER_EXE PUBLIC CUDA_SPH_SOLVER_LIB)

target_link_libraries(CUDA_SPH_SOLVER_EXE PUBLIC SDL2)
target_link_libraries(CUDA_SPH_SOLVER_EXE ${SDL2_LIBRARIES})
target_include_directories(CUDA_SPH_SOLVER_EXE PUBLIC ${3RD_PARTY_ROOT_DIR}/SDL2/include)

add_custom_command(
    TARGET CUDA_SPH_SOLVER_EXE POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_RUNTIME_DLLS:CUDA_SPH_SOLVER_EXE> $<TARGET_FILE_DIR:CUDA_SPH_SOLVER_EXE> COMMAND_EXPAND_LISTS)

# to solve lib conflict warning LNK4098
set(PLATFORM_LINKFLAGS_DEBUG "/NODEFAULTLIB:libcmt.lib /NODEFAULTLIB:msvcrt.lib /NODEFAULTLIB:libcmtd.lib")
set_property(
    TARGET CUDA_SPH_SOLVER_EXE APPEND_STRING PROPERTY
    LINK_FLAGS_DEBUG " ${PLATFORM_LINKFLAGS_DEBUG}"
  )

  